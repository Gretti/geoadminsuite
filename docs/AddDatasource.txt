= Steps to Add a new Datasource =

== Adding a new File format ==
1. Create a new DataAccess class(Don't implement yet).  If Geotools DataStore is the datasource extends the GTDataStoreDataAccess class
2. Declaring a new DataAccessType in the DataAccessType enum
3. Create a AbstractFileAccessFactory implementation
4. Implement DataAccess implementation.  DataAccessHelper can help simplify implementation
	- It is recommended that you implement doGet so that it will return a file if a file is requested.  (See ShpDataAccess)
	- When implementing createMSLayerInner you can use createMapServerLayer to make it simpler
5. Implement factory.  FileFactoryHelper has commonly used methods. 
	- In order to create the parameters the FolderDataAccess will AbstractFileAccessFactory#createConnectionParameters look at that
	  implementation to see what parameters are available to be used



== Adding a new Datasource with new DataAccess objects ==
1. Update GeneralLayout.js.  Change the Ext.data.SimpleStore (Currently line 529) so that it contains your new type (If it does not fit as one of the existing ones).  It should look something like:
	data : [['folder','folder'],['pg','pg'],['oracle','oracle'],['wms','wms'],['wfs','wfs']]

2. Add a section in GeneralLayout.js that enables the logical fields for WFS.  Line 566 is where the WMS declaration is (at the time of this writing).  It looks something like:
		else if (record.data.type == 'wms'){
		      Ext.getCmp(curHost + '.port').disable();
		      Ext.getCmp(curHost + '.uname').disable();
		      Ext.getCmp(curHost + '.upwd').disable();
		      Ext.getCmp(curHost + '.path').disable();
		      Ext.getCmp(curHost + '.instance').disable();
		      Ext.getCmp(curHost + '.recurse').disable();
		  }
2. Make sure that MapServer ConnectionType is defined in MsLayer.  (When I added WFS I had to add a new type)
3. Implement a new Datasource subclass, 
	- you may need to create AbstractDataAccessFactory and a DataAccess skeleton classes
4. Implement an AbstractDataAccessFactory subclass
5. Add a new declaration in the DataAccessType
6. Implement a DataAccess subclass
7. Implement a Factory<List<Datasource>, HostDescriptorBean> implementation in the Datasource Managers package that creates a WfsDatasource.  This is for the DatasourceManager to use for creating WfsDatasources.
8. Add the new factory to the collection of factories in the DatasourceManager class.  It is in an initializer block.
9. If you want a special icon for it you will have to update some jsp files.  So far I have found one in: 
	mapConfigurationLayer.jsp.  
