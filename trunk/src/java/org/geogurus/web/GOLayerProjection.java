/*
 * GOLayerProjection.java
 *
 * Created on 15 octobre 2002, 16:00
 */
package org.geogurus.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.geogurus.gas.objects.UserMapBean;
import org.geogurus.gas.utils.ObjectKeys;

/**
 * Servlet to deal with a geonline Layer projections JSP page:
 * MC_geonline_gest_proj.jsp
 * This servlet updates the userMapBean.targetProjection String according to given list of GeometryClass identifiers
 * This list is generated by the JSP page and passed to this servet as a comma-separated list of values, under
 * the layerorder form parameter
 *
 * @author  nri
 */
public class GOLayerProjection extends BaseServlet {
    protected final String mc_golayer_jsp = "MC_geonline_gest_proj.jsp";
    
    /**
     * Main method listening to client requests:
     */
    public void process(HttpServletRequest request, HttpServletResponse response) {
        HttpSession session = request.getSession(true);
debugParameters(request);
        // the UserMapBean stored in session.
        UserMapBean umb = (UserMapBean)session.getAttribute(ObjectKeys.USER_MAP_BEAN);
        String targetProj = request.getParameter("completeselectedproj");
        if (targetProj.length() == 0) {
            // no target projection, set variable to null to allow UserMapBean to deal with this case
            targetProj = null;
        }
        // sets the target projection to the bean. Then redirect to JSP:
        umb.setTargetProjection(targetProj);
        //umb.generateUserMapfile();
        
        // put in the request a parameter to refresh the mapfile in the main window
        dispatch(request, response, mc_golayer_jsp + "?refreshmap=true");
    }
}
