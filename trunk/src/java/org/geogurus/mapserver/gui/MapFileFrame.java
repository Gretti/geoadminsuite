/*
 * Copyright (C) 2003-2008  Gretti N'Guessan, Nicolas Ribot
 *
 * This file is part of GeoAdminSuite
 *
 * GeoAdminSuite is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * GeoAdminSuite is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with GeoAdminSuite.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * MapFileFrame.java
 *
 * Created on 21 mars 2002, 11:52
 */

package org.geogurus.mapserver.gui;

import javax.swing.JOptionPane;

import org.geogurus.mapserver.MapFile;
import org.geogurus.mapserver.objects.Map;

/**
 * Tests mapFile utilities
 *
 * @author  Bastien VIALADE
 */
public class MapFileFrame extends javax.swing.JFrame {
    
    private MapFile fileToRead;
    private MapFile fileWhereToSave;
    private Map map;
    
    /** Creates new form MapFileFrame */
    public MapFileFrame() {
        fileToRead = null;
        map = null;
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        getContentPane().setLayout(new java.awt.BorderLayout(10, 10));

        setTitle("MapFile Utils test");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jButton1.setText("Mapping");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mappingFile(evt);
            }
        });

        jPanel2.add(jButton1);

        jButton3.setText("Display Mapping");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayMapping(evt);
            }
        });

        jPanel2.add(jButton3);

        jButton5.setText("Save Mapping");
        jButton5.setEnabled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMapping(evt);
            }
        });

        jPanel2.add(jButton5);

        jButton6.setText("Display Save");
        jButton6.setEnabled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displaySave(evt);
            }
        });

        jPanel2.add(jButton6);

        jButton4.setText("Quit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quit(evt);
            }
        });

        jPanel2.add(jButton4);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        jLabel1.setText("MapFile: ");
        jPanel3.add(jLabel1);

        jTextField1.setColumns(25);
        jPanel3.add(jTextField1);

        jButton2.setText("...");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFile(evt);
            }
        });

        jPanel3.add(jButton2);

        getContentPane().add(jPanel3, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel4, java.awt.BorderLayout.WEST);

        jTextArea1.setBackground(java.awt.Color.black);
        jTextArea1.setColumns(35);
        jTextArea1.setEditable(false);
        jTextArea1.setForeground(java.awt.Color.yellow);
        jTextArea1.setRows(25);
        jTextArea1.setText(" ");
        jScrollPane1.setViewportView(jTextArea1);

        jPanel5.add(jScrollPane1);

        jTextArea2.setColumns(35);
        jTextArea2.setRows(25);
        jScrollPane2.setViewportView(jTextArea2);

        jPanel5.add(jScrollPane2);

        getContentPane().add(jPanel5, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents
    
    private void displaySave(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displaySave
        if (fileWhereToSave==null) return ;
        jTextField1.setText(fileWhereToSave.getAbsolutePath());
        jTextArea2.setText(fileWhereToSave.getContentsOfFile());
        jTextArea2.setCaretPosition(0);
    }//GEN-LAST:event_displaySave
    
    private void saveMapping(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMapping
        fileWhereToSave = new MapFile(fileToRead.getAbsolutePath()+"2");
        if (!fileWhereToSave.save(map))
            JOptionPane.showMessageDialog(this,"Error while saving mapping file: "+fileWhereToSave.getName(),"Error",JOptionPane.ERROR_MESSAGE);
        else {
            JOptionPane.showMessageDialog(this,"MapFile saved to : "+fileWhereToSave.getAbsolutePath(),"Cool",JOptionPane.INFORMATION_MESSAGE);
            jButton6.setEnabled(true);
        }
    }//GEN-LAST:event_saveMapping
    
    private void displayMapping(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayMapping
        if (map!=null) {
            jTextArea2.setText(map.toString());
            jTextArea2.setCaretPosition(0);
        }
    }//GEN-LAST:event_displayMapping
    
    private void quit(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quit
        System.exit(0);
    }//GEN-LAST:event_quit
    
    private void mappingFile(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mappingFile
        if (fileToRead!=null)    {
            map = fileToRead.load();
            if (map==null) {
                JOptionPane.showMessageDialog(this,"Error while mapping file: " + fileToRead.getMapErrorMessage(),
                        "Error",JOptionPane.ERROR_MESSAGE);
                System.out.println(fileToRead.getMapErrorMessage());
            }
            else {
                JOptionPane.showMessageDialog(this,"Mapping done.","Cool",JOptionPane.INFORMATION_MESSAGE);
                jButton3.setEnabled(true);
                jButton5.setEnabled(true);
            }
        } else
            JOptionPane.showMessageDialog(this,"No file selected.","Error",JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_mappingFile
    
    private void openFile(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFile
        javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
        fileChooser.setDialogTitle("Chargement de fichier MapFile");
        fileChooser.addChoosableFileFilter(new MapFileFilter());
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal==javax.swing.JFileChooser.APPROVE_OPTION) {
            fileToRead = new MapFile(fileChooser.getSelectedFile().getAbsolutePath());
            jTextField1.setText(fileToRead.getAbsolutePath());
            jTextArea1.setText(fileToRead.getContentsOfFile());
            jTextArea1.setCaretPosition(0); 
            jTextArea2.setText("");
            jButton1.setEnabled(true);
            jButton3.setEnabled(false);
            jButton5.setEnabled(false);
            jButton6.setEnabled(false);
        }
    }//GEN-LAST:event_openFile
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new MapFileFrame().setVisible(true);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    
}

