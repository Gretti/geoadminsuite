#!/bin/bash

################################################################################
#
# Shell script to load Navstreet data into a pre existing Postgis 2.0.2 database
# (see create_database.sh to create the database)
#
################################################################################

# These variables will be replaced by configuration values after running applu_config.sh
DBHOST=%DBHOST%
DBPORT=%DBPORT%
DBNAME=%DBNAME%
DBUSER=%DBUSER%
DBPASS=%DBPASS%
DATADIR=%DATADIR%
PGBIN=%PGBIN%

# Loads polygons composing map background
# Polygons to load are:
# Adminbndy2 to Adminbndy5, 

# the list of datasources to load files from:
# to load all sources, use:
#datasources="`find /Volumes/Lucifer/data -type d -depth 3 -print`"

datasources="/Volumes/Lucifer/data/EMEA/FRANCE_ANDORRA/F1AM12400EF1000AABCE"

################################################################################
# Functions
################################################################################

loadShape() {
    shape="$1"
    tabname="$2"
    lodemode="$3"

    ${PGBIN}shp2pgsql $PGCON -Da -s 4326 -g the_geom -t 2D "$ds"/$shape $tabname | ${PGBIN}psql -q $PGCON $DBNAME
    out0="${PIPESTATUS[0]}"
    out1="${PIPESTATUS[1]}"

    if [ $out0 -eq 1 ] ; then
        echo "  >> Shapefile does not exist. skipping import for shapefile: $shape"
        return 0
    fi
    if [ -z "$out1" ]   ; then
        return 0
    fi
    if [ $out1 -eq 0 ]   ; then
        a=0
    else
        echo "  >> psql command failed, skipping import for shapefile: $shape"
    fi
}

################################################################################
# Main
################################################################################

#for ds in $datasources; do
for ds in `cat all_datasources.txt`; do

    loadShape Adminbndy2.shp adminbndy2
    loadShape Adminbndy3.shp adminbndy3
    loadShape Adminbndy4.shp adminbndy4
    loadShape Adminbndy5.shp adminbndy5

    echo $ds
done
OUT=*?

#loads the boundaries into the final surface tables
${PGBIN}psql $PGCON -f sql_scripts/load_surface.sql -d $DBNAME

# 