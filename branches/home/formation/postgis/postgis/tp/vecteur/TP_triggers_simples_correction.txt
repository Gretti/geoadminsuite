___________________________
TP de creation de triggers:

But: creation d'un trigger sur une colonne geographique, la mettant à jour
automatiquement en cas d'insertion dans d'autres colonnes de la table

• Reprendre le TP: tp_import_gps.txt: charger les données dans une table, qui contiendra
  6 colonnes: gid, latitude, longitude, altitude, temps, geom
  
Pour importer les données avec l'outil COPY de Postgresql, la table doit exister auparavant, 
on la crée donc. 

Le fichier de données ne contenant pas d'identifiant spécifique ou autre ID, mais
la creation d'une clé primaire de type SERIAL (auto incrementee) va gerer le cas 
automatiquement

Attention aux coordonnées: Postgis stocke les objets qui ont des coordonnées sphériques sous
la forme longitude/latitude (x-y);

create table traces (
	id serial primary key,
	lat double precision not null,
	lon double precision not null,
	elev double precision,
	temps timestamp);
	
-- Importer les donnees dans cette table (commande COPY FROM)

copy traces (lat, lon, elev, temps) 
from 'postgis/data/vecteur/trace.csv' 
WITH (format CSV, delimiter ',' , header true);
	
	
-- Ajouter la colonne geographique permettant de stocker les points
  
  -> trouver les codes EPSG/SRID d'une projection: spatialreference.org, ou http://www.spatial-reference.org/

select addgeometryColumn('traces', 'geom', 4326, 'POINT', 2);

• Créer un trigger sur cette table mettant automatiquement a jour le champ "geom" lorsque
  des coordonnées latitude/longitude sont insérées dans la table:
    - Soit gérer le cas de coordonnées qui peuvent etre nulles
    - Soit mettre des contraintes de non nullité sur ces colonnes, a la creation de la table
    
La creation d'un trigger se fait toujours en deux etapes:
    1- creation de la fonction du trigger: le code exécuté par le trigger
    2- creation du trigger sur la table en précisant quelle fonction utiliser
    
-------- La fonction du trigger

create or replace function makeGeomFromGPS() returns trigger as $$
    DECLARE
    
    BEGIN
		-- RAISE NOTICE 'Longi: %, lati: %', NEW.lon, NEW.lat;
        NEW.geom := st_setsrid(st_makepoint(NEW.lon, NEW.lat), 4326);
        RETURN NEW;
    END;
$$ LANGUAGE PLPGSQL;


--------- puis la creation du trigger
drop trigger if exists traces_trigger on traces;

create trigger traces_trigger 
    BEFORE UPDATE OR INSERT
    ON traces 
    FOR EACH ROW
	EXECUTE PROCEDURE makeGeomFromGPS();

-- test d'un update: la geom est-elle créée ?
update traces set lat=lat+0.0000000001 where id = 1;

--Vérifier la prise en compte du trigger en inserant des données
select * from traces order by id limit 1;

-- test d'une insertion:
insert into traces(lon, lat) values (0.0, 0.0);

-- verif (le dernier record en premier, et uniquement lui)
select * from traces order by id desc limit 1;
